use namespace='System.Web.Script.Serialization'
use assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"

@{/*

k-test
    Run unit tests in your project.

projectFile='' 
    Required. Path to the test project.json to execute

*/}

@{
    var serializer = new JavaScriptSerializer();
    var projectText = File.ReadAllText(projectFile);
    var project = (Dictionary<string, object>)serializer.DeserializeObject(projectText);
    
    object commandsObject;
    var commands = project.TryGetValue("commands", out commandsObject)
        ? (Dictionary<string, object>)commandsObject
        : new Dictionary<string, object>();
            
    if (commands.Keys.Contains("test"))
    {
        var projectFolder = Path.GetDirectoryName(projectFile);
        
        object configsObject;
        var configs = project.TryGetValue("frameworks", out configsObject)
            ? (Dictionary<string, object>)configsObject
            : new Dictionary<string, object>
                {
                    { "net45", new Dictionary<string, object>() } // Assume net45 only if none specified
                };
        
        // Currently only net* and k* targets are supported. See aspnet/Universe#53
        var targetFrameworks = configs.Keys.Where(k => k.StartsWith("net", StringComparison.OrdinalIgnoreCase)
                                                    || k.StartsWith("k", StringComparison.OrdinalIgnoreCase)
                                                    || k.StartsWith("aspnet", StringComparison.OrdinalIgnoreCase));
        
        foreach (var framework in targetFrameworks)
        {
            if (framework.StartsWith("net", StringComparison.OrdinalIgnoreCase)
                || (framework.StartsWith("aspnet", StringComparison.OrdinalIgnoreCase)
                    && !framework.StartsWith("aspnetcore", StringComparison.OrdinalIgnoreCase)))
            {
                K("test", projectFolder, "");
            }
            else if (!IsMono)
            {
                K("test", projectFolder, "default -runtime CoreCLR");
            }
        }
    }
}

macro name='K' command='string' workingdir='string' kvmUse='string'
    k